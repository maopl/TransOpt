    # manager = Manager()
    # task_queue = manager.Queue()
    # result_queue = manager.Queue()
    # db_lock = manager.Lock()

    # db = Database(task_queue=task_queue, result_queue=result_queue, lock=db_lock)
    # dm = DataManager()

    # def test_task(dm, pid):
    #     table_list = dm.db.get_table_list()
    #     logger.info(f"PID{pid}: Table list pre {table_list}")
    #     for table in table_list:
    #         all_data =  dm.db.select_data(table)
    #         logger.info(f"PID{pid}: Table {table} has {len(all_data)} rows")
    #     # dm.db.create_table(f"test_table_{pid}", {
    #     #     "variables": [
    #     #         {"name": "x1", "type": "continuous", "lb": -5.12, "ub": 5.12, "default": 0.0}
    #     #     ]
    #     # })
    #     # table_list = dm.db.get_table_list()
    #     # logger.debug(f"PID{pid}: Table list post {table_list}")

    # processes = []
    # for i in range(5):
    #     p = Process(target=test_task, args=(dm, i))
    #     processes.append(p)
    #     p.start()

    # for p in processes:
    #     p.join()

    # 创建测试 datasets
    # create_experiment_datasets(db, 200)
    # create_exported_datasets(db, 100)

    # dm.db.remove_table("Sphere_w1_s123_1715002771")

    # # 获取所有的 datasets
    # dataset_ls = dm.db.get_table_list()
    # print(dataset_ls)

    # dataset_exp = dm.db.get_experiment_datasets()
    # print(dataset_exp)

    # print()

    # metadatas = dm.db.get_all_metadata()
    # print(metadatas)

    # data = dm.db.select_data("Sphere_w1_s1_1715240386")
    # print(data)
    # print()

    # search_res = db.search_tables_by_metadata({"dimensions": "5"})
    # print(search_res)
    # dataset_all = db.get_all_datasets()
    # print(dataset_all)

    # for dataset in dataset_ls:
    #     dataset_info = db.query_dataset_info(dataset)
    #     generate_and_insert_data(db, dataset, dataset_info, 100)

    # # # 获取某一 dataset 的 info
    # dataset_info = db.query_dataset_info(dataset_ls[0])

    # generate_and_insert_data(db, dataset_ls[0], dataset_info, 100)

    # print(db.select_data(dataset_ls[0]))
    # [{'loan_amount_fyb': 49.57, 'credit_score_el': 60.26, 'market_risk_w': 65.6, 'obj_0_aot': 5.97, 'batch': -1, 'error': 0}, ...]

    # dm.teardown()